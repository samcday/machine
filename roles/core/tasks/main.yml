---
- name: install some core packages
  community.general.pacman:
    name:
    - base-devel
    - chrony
    - ctags
    - efibootmgr
    - git
    - htop
    - jq
    - jre-openjdk
    - man
    - mercurial
    - pacman-contrib
    - pacutils
    - ripgrep
    - rsync
    - rustup
    - sccache
    - sshfs
    - strace
    - sudo
    - tcpdump
    - unzip
    - wireguard-tools

- name: wheel sudoers rule
  ansible.builtin.lineinfile:
    path: /etc/sudoers
    regexp: '^%wheel ALL='
    line: '%wheel ALL=(ALL) NOPASSWD: ALL'
    validate: /usr/bin/visudo -cf %s

- name: enable en_US UTF8 locale
  community.general.locale_gen:
    name: en_US.UTF-8
    state: present

- name: set locale.conf
  ansible.builtin.copy:
    content: 'LANG=en_US.UTF-8'
    dest: /etc/locale.conf

- name: set timezone
  ansible.builtin.file:
    src: /usr/share/zoneinfo/Europe/Berlin
    dest: /etc/localtime
    state: link

- name: disable systemd-homed PAM modules
  ansible.builtin.replace:
    path: /etc/pam.d/system-auth
    regexp: '^(?!#)(.*pam_systemd_home.so)'
    replace: '#\1'

- name: init pacman-key
  shell:
    cmd: pacman-key --init && pacman-key --populate
    creates: /etc/pacman.d/gnupg

- name: pretend GnuPG isn't dying a slow spasmic death
  ansible.builtin.lineinfile:
    path: /etc/pacman.d/gnupg/gpg.conf
    regexp: 'keyserver\s+'
    line: 'keyserver hkp://keyserver.ubuntu.com'

- name: enable+start chrony
  ansible.builtin.systemd:
    name: chronyd.service
    enabled: yes
    state: started

- name: install Caddy
  become_user: aur_builder
  become: yes
  aur: name=caddy2

- name: ensure Caddy is running+enabled
  ansible.builtin.systemd:
    name: caddy.service
    state: started
    enabled: yes
