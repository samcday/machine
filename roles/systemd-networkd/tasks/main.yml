---
- name: setup network config
  ansible.builtin.copy:
    src: 20-{{ item }}.network
    dest: /etc/systemd/network/20-{{ item }}.network
  with_items:
  - wired
  - wifi
  notify:
  - reload systemd-networkd

- name: ensure systemd-networkd is running + enabled.
  ansible.builtin.systemd:
    name: systemd-networkd.service
    state: started
    enabled: yes

- name: ensure systemd-resolved is running + enabled.
  ansible.builtin.systemd:
    name: systemd-resolved.service
    state: started
    enabled: yes

- name: /etc/resolv.conf
  ansible.builtin.file:
    path: /etc/resolv.conf
    force: yes
    src: /run/systemd/resolve/stub-resolv.conf
    state: link

- name: make sure avahi is not running
  ansible.builtin.systemd:
    name: '{{ item }}'
    enabled: no
    state: stopped
  with_items:
  - avahi-daemon.service
  - avahi-daemon.socket

- name: make sure systemd-resolved mDNS is enabled.
  ansible.builtin.lineinfile:
    path: /etc/systemd/resolved.conf
    regexp: MulticastDNS=
    line: MulticastDNS=yes
  notify: restart systemd-resolved

- name: configure search domains
  ansible.builtin.lineinfile:
    path: /etc/systemd/resolved.conf
    regexp: Domains=
    line: Domains=local wgme
  notify: restart systemd-resolved

- name: enable DNSoTLS
  ansible.builtin.lineinfile:
    path: /etc/systemd/resolved.conf
    regexp: 'DNSOverTLS='
    line: DNSOverTLS=yes
  notify: restart systemd-resolved

- name: 1.1.1.1 DNS
  ansible.builtin.lineinfile:
    path: /etc/systemd/resolved.conf
    regexp: '^#?\s*DNS='
    line: DNS=1.1.1.1 1.0.0.1
  notify: restart systemd-resolved

- name: local hostname
  ansible.builtin.lineinfile:
    path: /etc/hosts
    line: 127.0.0.1 {{ inventory_hostname }}
